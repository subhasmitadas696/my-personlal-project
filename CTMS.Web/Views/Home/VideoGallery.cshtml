@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutWeb.cshtml";
}
<link href="~/css/lightgallery.css" rel="stylesheet" />
<style>
    .inner-gallery {
        grid-template-columns: repeat(4,1fr);
        gap: 1.5rem;
    } 
    .main-video { 
        margin-right: 2rem;
        flex: 0 0 70%;
    }
    .main-video video {
        height: 500px;
        overflow: hidden;
        border-radius: 1rem;
    }
    .main-video video {
        height: 100%;
        width: 100%;
    }
    .video-list {  
        border-radius: .5rem;
        height: 500px;
        overflow: auto; 
    }
    .video-list__item {
        margin-bottom: 1rem;
        border-bottom: 1px solid #ddd;
        padding-bottom: 1rem;
        cursor: pointer;
        display: flex;
    }
    .video-list__item:last-child {
        border-bottom: 0;
        padding-bottom:0;
    }
    .video-list__item:hover .video-list__item-title,
    .video-list__item.active .video-list__item-title{
        color: var(--bs-primary);
    }
    .video-list__item .video-list__thumbnail {
        flex: 0 0 120px;
        height: 70px;
        border-radius: 0.25rem;
        margin-right: 1rem;
        overflow: hidden;
        display: block;
    }
    .video-list__item .video-list__thumbnail img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
    }
    .video-list__item-title {
        font-size: 0.9rem;
        flex-grow: 1;
        line-height: 1.4;
    }
    @@media (max-width: 991px) {
        .main-video {
            margin: 0 0  2rem;
        }
        .video-list {
            height: auto;
            display: flex;
        }
        .video-list__item-title {
            display: none;
        }
        .video-list__item {
            margin:  0 !important;
            border: 0;
            padding: 0;
            display: block;
        }
        .video-list__item:last-child {
            margin-right: 0;
        }
        .video-list__item .video-list__thumbnail {
            width: 100px;
            margin-right: .5rem;
        }
    }
</style>
<div class="innerpage-container-breadcrumb">
    <div class="container d-flex justify-content-between align-items-center">
        <div>
            <h2 class="page-heading">Videos</h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index" asp-area="">Home</a></li>
                    <li class="breadcrumb-item active">Videos</li>
                </ol>
            </nav>
        </div>
        <button class="btn btn-sm btn-secondary" onclick="window.history.back()"><i class="bi bi-arrow-left "></i> Back to Gallery</button>
    </div>
</div>
<div class="innerpage-container">
    <div class="container">
        <h3 class=" mb-3 text-primary">@ViewBag.GalleryName</h3>  
        <div class="d-lg-flex align-items-start">
            <div class="main-video">
                <div class="video mb-3">
                    <video controls="controls" id="webVideo" muted autoplay>
                        <source src="" type="video/mp4"/>
                    </video>
                </div>
                <h4 class="video__title"></h4>
            </div>
            <div class="card flex-grow-1">
                <div class="card-body"> 
                    <div class="video-list" id="gallery-videojs"> 
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/lightgallery-all.min.js"></script>
<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">
    $(document).ready(function () {
        mediabind(@ViewBag.Id,@ViewBag.MediaType);
    });

    async function mediabind(id, MediaType)
    {
        try
        {
            const data = await $.ajax({
                url: '@Url.Content("~/")' + 'Home/GetMediaBind',
                data: { GalleryId: id, MediaType: MediaType },
                type: "get",
                dataType: "json"
            });

            if (data.state == "success") {
                var result = data.data;
                var thisHtml = '';
                for (var i = 0; i < result.length; i++) {
                    var photopath = "@Url.Content("~/")" + result[i].Path;
                    var videoThumbnail = await captureVideoThumbnail(photopath);
                    thisHtml += '<div class="video-list__item" >'
                        +'<div class="video-list__thumbnail" data-src="' + photopath + '">'
                        + '<img src="' + videoThumbnail + '" alt="KSSMS Video" />'
                        + '</div>'
                        + '<h5 class="video-list__item-title">Video #' + (i + 1) + '</h5>'
                        +'</div>';
                }
                $('#gallery-videojs').html(thisHtml);
                const firstVideoThumbnail = document.querySelector('.video-list__item');
                if (firstVideoThumbnail) {
                    firstVideoThumbnail.click();
                }
            }
        }
        catch (error) {
            console.error("Error fetching media data:", error);
        }
    }
    $(document).on('click', '.video-list__item', function () {
        const thumbnail = $(this).find('.video-list__thumbnail');
        const videoDataSrc = thumbnail.attr('data-src');
        const videoTitle = $(this).find('.video-list__item-title').text();
        $('.main-video video').attr('src', videoDataSrc);
        $('.video__title').text(videoTitle);
        $('.video-list__item').removeClass('active');
        $(this).addClass('active');
    });
    function captureVideoThumbnail(videoUrl) {
        return new Promise((resolve, reject) => {
            var video = document.createElement("video");
            video.src = videoUrl;
            video.preload = "metadata";
            video.onloadedmetadata = function () {
                video.currentTime = 5;
                video.onseeked = function () {
                    var canvas = document.createElement("canvas");
                    canvas.width = 100;
                    canvas.height = 100;
                    var context = canvas.getContext("2d");
                    context.drawImage(video, 0, 0, canvas.width, canvas.height);
                    resolve(canvas.toDataURL("image/jpeg"));
                };
            };
            video.onerror = function (error) {
                reject(error);
            };
            video.load();
        });
    }



</script>

