@{
    ViewData["Title"] = "ChangePassword";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@Html.AntiForgeryToken()
<div class="card card--lg">
    <div class="card-body">
        <h5 class="view-form-details__title mt-0">Change Password</h5>
        <input id="UserId" value="@ViewBag.UserId" class="form-control" hidden />
        <div class="row g-4">
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="text" id="UserName" name="UserName" value="@ViewBag.UserName" class="form-control" placeholder="Enter User Name" disabled>
                    <label for="UserName">User Name</label>
                    <i class="bi bi-person form-floating__icon-right"></i>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="password" id="CurrentPassword" name="CurrentPassword" class="form-control" placeholder="Enter Current Password">
                    <label for="CurrentPassword">Current Password</label>
                    <i class="bi bi-eye-slash form-floating__icon-right" id="toggleCurrentPassword"></i>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="password" id="NewPassword" name="NewPassword" class="form-control" placeholder="Enter New Password"><i class="bi bi-info-circle text-success" id="passwordInfo"></i>
                    <label for="NewPassword">New Password</label>
                    <i class="bi bi-eye-slash form-floating__icon-right" id="toggleNewPassword"></i>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="password" id="ConfirmPassword" name="ConfirmPassword" class="form-control" placeholder="Confirm New Password">
                    <label for="ConfirmPassword">Confirm Password</label>
                </div>
            </div>
            <div class="col-md-4">
                <div>
                    <button id="btnSubmit" type="button" class="btn btn-secondary btn-lg" onclick="submit()">Submit</button>
                    <button class="btn btn-danger btn-lg" type="reset" value="Reset" onclick="reset()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $("#toggleCurrentPassword").click(function () {
            $(this).toggleClass("bi-eye bi-eye-slash");
            var type = $(this).hasClass("bi-eye-slash") ? "password" : "text";
            $("#CurrentPassword").attr("type", type);
        });
    });
    $(function () {
        $("#toggleNewPassword").click(function () {
            $(this).toggleClass("bi-eye bi-eye-slash");
            var type = $(this).hasClass("bi-eye-slash") ? "password" : "text";
            $("#NewPassword").attr("type", type);
        });
    });
</script>
<script src="~/js/aes.js"></script>
<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">
    function SubmitsEncry(strCntrol) {
        var strData = $('#' + strCntrol).val();
        var key = CryptoJS.enc.Utf8.parse('8080808080808080');
        var iv = CryptoJS.enc.Utf8.parse('8080808080808080');
        var encryptedlogin = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(strData), key,
            {
                keySize: 128 / 8,
                iv: iv,
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
        $('#' + strCntrol).val(encryptedlogin);
    }
    function submit() {
        if (validateCurrentPassword() && validateNewPassword() && validateConfirmPassword()) {
            swal.fire({
                title: "Are you sure?",
                text: "Do you want to change your password?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, change it!",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                    var encryptedCurrentPassword = SubmitsEncry('CurrentPassword');
                    var encryptedNewPassword = SubmitsEncry('NewPassword');

                    var changepass = {
                        USERID: $("#UserId").val(),
                        OLDPASSWORD: $("#CurrentPassword").val(),
                        NEWPASSWORD: $("#NewPassword").val()
                    };

                    $.ajax({
                        url: '@Url.Content("~/")' + 'ChangePassword/ChangePassword',
                        data: changepass,
                        headers: { "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val() },
                        type: "POST",
                        dataType: "json",
                        beforeSend: function (xhr) {
                            $("#overlay").show();
                        },
                        success: function (result) {
                            if (result.state === "success") {
                                swal.fire({
                                    title: "Success",
                                    text: result.message,
                                    icon: "success"
                                }).then(function () {
                                    var url = '@Url.Action("LogIn", "Authentication", new { area = "" })';
                                    location.href = url;
                                });
                            }
                            else if (result.state === "warning") {
                                swal.fire({
                                    title: "Warning",
                                    text: result.message,
                                    icon: "warning"
                                }).then(function () {
                                    reset();
                                });
                            }
                            else {
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            swal.fire({
                                title: "Error",
                                text: "An error occurred. Please try again later.",
                                icon: "error"
                            });
                        }
                    });
                }
            });
        }

    }
    

</script>
<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">
    $(document).ready(function () {
        $("#NewPassword").on("change", function () {
            validateCurrentPassword();
        });

        $("#ConfirmPassword").on("change", function () {
            validateNewPassword();
        });

        $('#passwordInfo').tooltip({
            title: "The 'New Password' field should accept characters, with a minimum length of 8 digits and a maximum length of 15. It must contain at least one special character, one number, one uppercase letter, and one lowercase letter.",
            placement: 'top',
            trigger: 'hover',
        });
    });
</script>


<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">
    
    function validateCurrentPassword() {
        var currentPassword = $("#CurrentPassword").val();

        if (!currentPassword) {
            swal.fire({
                title: "Warning",
                text: "Please Enter the Current Password.",
                icon: "warning"
            });
            return false;
        }

        return true;
    }

</script>
<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">
    function validateNewPassword() {
        var newPassword = $("#NewPassword").val();

        if (!newPassword) {
            swal.fire({
                title: "Warning",
                text: "Please Enter the New Password.",
                icon: "warning"
            });
            return false;
        }

        var pattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\W)(?=.*\d).{8,15}$/;

        if (!pattern.test(newPassword)) {
            swal.fire({
                title: "Warning",
                text: "The 'New Password' field should accept characters, with a minimum length of 8 digits and a maximum length of 15. It must contain at least one special character, one number, one uppercase letter, and one lowercase letter.",
                icon: "warning"
            });
            return false;
        }

        return true;
    }
</script>
<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">
    function validateConfirmPassword() {
        var confirmPassword = $("#ConfirmPassword").val();
        var newPassword = $("#NewPassword").val();

        if (!confirmPassword) {
            swal.fire({
                title: "Warning",
                text: "Please Enter the Confirm Password.",
                icon: "warning"
            });
            return false;
        }

        if (newPassword !== confirmPassword) {
            swal.fire({
                title: "Warning",
                text: "New password and Confirm Password do not match.",
                icon: "warning"
            });
            return false;
        }

        return true;
    }
</script>


<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">

    function reset() {
        $("#CurrentPassword").val("");
        $("#NewPassword").val("");
        $("#ConfirmPassword").val("");
    }
</script>