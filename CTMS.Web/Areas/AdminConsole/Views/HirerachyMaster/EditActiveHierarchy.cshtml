@model CTMS.Web.Areas.AdminConsole.Models.HierarchyMaster.Hierarchy
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "~/Areas/AdminConsole/Views/Shared/_AdminConsoleLayout.cshtml";
    ViewBag.Title = "Edit Hierarchy";
}



@section Scripts {
    <script src="~/js/adminconsole/hierarchymaster.js"></script>
    <script type="text/javascript">
        $(function () {
            $("#btnReset").bind("click", function () {
                var url = '@Url.Action("ViewActiveHirerarchy", "HirerachyMaster")';
                window.location.href = url;

            });
        });
    </script>
}
<div class="card card--lg">
    <div class="nav nav-tabs card--lg__tabs" id="nav-tab" role="tablist">
        <a class="nav-link active" id="add-hierarchy" asp-controller="HirerachyMaster" asp-action="AddHirerarchy">
            Add
        </a>
        <a class="nav-link" id="active-hierarchy" asp-controller="HirerachyMaster" asp-action="ViewActiveHirerarchy">
            Active
        </a>
        <a class="nav-link" id="inactive-hierarchy" asp-controller="HirerachyMaster" asp-action="ViewInActiveHirerarchy">
            InActive
        </a>
    </div>
        <div class="card-body">
            <form id="frmCreateHierarchy" data-parsley-validate novalidate method="post" asp-action="EditHierarchy" asp-controller="HirerachyMaster" asp-area="AdminConsole" asp-antiforgery="true" onsubmit="return validateForm()">

                <div class="form-group row">

                    <div class="col-md-4 form-group">
                        <label class="control-label">Hirerarchy Name<span style="color:Red">*</span></label>
                        <div class="input-group">
                            <input asp-for="ROLENAME" type="text" id="txtupdhierarchy"
                                   name="ROLENAME" class="form-control"
                                   Onkeypress="return inputLimiter(event,'NameCharacters')" placeholder="Enter Hierarchy Name" autocomplete="off" maxlength="100" />
                        </div>
                    </div>

                    <div class="col-md-4 form-group">
                        <label class="control-label">No Of Level<span style="color:Red">*</span></label>
                        <div class="input-group">
                            <input asp-for="LEVELID" type="text" id="txtupdnooflevel" name="LEVELID"
                                   Onkeypress="return inputLimiter(event,'Numbers')" class="form-control" placeholder="Enter No Of  Level" autocomplete="off" maxlength="3" />
                        </div>
                    </div>
                    <input asp-for="INTUPDATEDBY" id="INTUPDATEDBY" type="hidden" value=@Model.INTUPDATEDBY />
                    <input asp-for="ROLEID" id="ROLEID" type="hidden" value="@Model.ROLEID" />
                </div>
                        
                <div class="mt-4">
                    <div class="text-center">
                        <span class="colon"></span>
                        <button type="submit" name="submit" id="btnsubmit" class="btn btn-primary mb-1t white-text" title="Submit" value="Submit">Update</button>
                        <button type="button" id="btnReset" value="Cancel" class="btn btn-danger"> Cancel </button>
                    </div>
                </div>

            </form>
        </div>
</div>



<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">

    function inputLimiter(e, allow) {
        var AllowableCharacters = '';

        if (allow == 'NameCharactersymbol') {
            AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz./&';
        }
        if (allow == 'NameCharacters') {
            AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.\'';
        }
        if (allow == 'Email') {
            AllowableCharacters = '1234567890@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_.';
        }
        if (allow == 'Description') {
            AllowableCharacters = '1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.,()/';
        }
        if (allow == 'NameCharactersAndNumbers') {
            AllowableCharacters = '1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-,/.\'';
        }
        if (allow == 'Numbers') {
            AllowableCharacters = '1234567890';
        }
        if (allow == 'Decimal') {
            AllowableCharacters = '1234567890.';
        }
        if (allow == 'Filename') {
            AllowableCharacters = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz/';
        }
        var k;
        k = document.all ? parseInt(e.keyCode) : parseInt(e.which);
        if (k != 13 && k != 8 && k != 0) {
            if ((e.ctrlKey == false) && (e.altKey == false)) {
                return (AllowableCharacters.indexOf(String.fromCharCode(k)) != -1);
            }
            else {
                return true;
            }
        }
        else {
            return true;
        }
    }

    function ClearField() {
        $('#txthierarchy').val('');
        $('#txtnooflevel').val('');
        $('#txtaliasname').val('');
        $('#txtaddress').val('');
    }
    $(document).ready(function (e) {


        $('#btnsubmit').click(function (e) {
            e.preventDefault(); // Prevent the default form submission

            if ($("#txtupdhierarchy").val() == "") {
                $("#txtupdhierarchy").focus();
                new swal(" Hierarchy Name Can't be blank.");

                return false;
            }
            if ($("#txtnooflevel").val() == "") {
                $("#txtnooflevel").focus();
                new swal("No of Level Can't be blank.");

                return false;
            }
            if (parseFloat($('#txtupdnooflevel').val()) == 0) {
                $("#txtupdnooflevel").focus();
                new swal("No of Level should be greater than 0.");

                return false;
            }
            if ($("#txtupdaliasname").val() == "") {
                $("#txtupdaliasname").focus();
                new swal(" Alias Name Can't be blank.");

                return false;
            }

            var formData = {
                ROLENAME: $('#txtupdhierarchy').val(),
                LEVELID: $('#txtupdnooflevel').val(),
                INTUPDATEDBY: $('#INTUPDATEDBY').val(),
                ROLEID: $('#ROLEID').val(),
            };

            Swal.fire({
                title: "Are you sure?",
                text: "You want to Update",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                closeOnConfirm: false
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: '/AdminConsole/HirerachyMaster/EditHierarchy',
                        data: formData,
                        success: function (response) {
                            console.log(response);
                            if (response === "Updated Successfully") {
                                Swal.fire({
                                    title: "",
                                    text: response,
                                    icon: "success"
                                }).then(() => {
                                    window.location.href = "/AdminConsole/HirerachyMaster/ViewActiveHirerarchy";
                                });
                            } else if (response === "Already Exist") {
                                Swal.fire({
                                    title: "",
                                    text: response,
                                    icon: "warning"
                                }).then(() => {
                                    return false;
                                });
                            } else {
                                Swal.fire({
                                    title: "",
                                    text: response,
                                    icon: "error"
                                }).then(() => {
                                    return false;
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: "",
                                text: 'An error occurred while processing the request.',
                                icon: "error"
                            }).then(() => {
                                return false;
                            });
                        }
                    });
                }
            });
        });
    });

</script>