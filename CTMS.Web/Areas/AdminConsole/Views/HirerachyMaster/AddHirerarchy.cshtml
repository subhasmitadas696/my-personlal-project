@model CTMS.Web.Areas.AdminConsole.Models.HierarchyMaster.Hierarchy
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "~/Areas/AdminConsole/Views/Shared/_AdminConsoleLayout.cshtml";
    ViewBag.Title = "Add Hierarhy Master";
}


@section Scripts {

}

<div class="card card--lg main-card" id="divaddform">
    <div class="nav nav-tabs card--lg__tabs" id="nav-tab" role="tablist">
        <a class="nav-link active" id="add-hierarchy" asp-controller="HirerachyMaster" asp-action="AddHirerarchy">
            Add
        </a>
        <a class="nav-link" id="active-hierarchy" asp-controller="HirerachyMaster" asp-action="ViewActiveHirerarchy">
            Active
        </a>
        <a class="nav-link" id="inactive-hierarchy" asp-controller="HirerachyMaster" asp-action="ViewInActiveHirerarchy">
            InActive
        </a>
    </div>
    <div class="card-body">
    <form id="frmCreateHierarchy" data-parsley-validate novalidate method="post" asp-action="AddHirerarchy" asp-controller="HirerachyMaster" asp-area="AdminConsole" asp-antiforgery="true">
    <div class="row g-4 mb-4">
        <div class="col-md-4">
            <div class="form-floating">
                <input asp-for="ROLENAME" type="text" id="txthierarchy" name="ROLENAME" class="form-control" Onkeypress="return inputLimiter(event,'NameCharacters')" placeholder="Enter Hierarchy Name" autocomplete="off" maxlength="100" autofocus />
                <label for="tname">Hirerarchy Name<span class="text-danger">*</span></label>
                <span class="text-danger" id="errtxtHirerarchyName"></span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-floating">
                <input asp-for="LEVELID" type="text" id="txtnooflevel" name="LEVELID" Onkeypress="return inputLimiter(event,'Numbers')" class="form-control" placeholder="Enter No Of  Level" autocomplete="off" maxlength="3" />
                <label for="tname">No Of Level<span class="text-danger">*</span></label>
            </div>
            <span class="text-danger" id="errtxtnooflevel"></span>
        </div>    
    </div> 
       <br />
    <div class="mt-4">
       
        <button type="submit" name="submit" id="btnsubmit" class="btn btn-primary rounded-pill btn-lg" title="Submit" value="Submit">Submit</button>

        <input id="resetButton" type="button" class="btn btn-secondary rounded-pill btn-lg" value="Reset" onclick="return ClearField();" />
           
        

    </div>
    </form>
    </div>
</div>

<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">

    function inputLimiter(e, allow) {
        var AllowableCharacters = '';

        if (allow == 'NameCharactersymbol') {
            AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz./&';
        }
        if (allow == 'NameCharacters') {
            AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.\'';
        }
        if (allow == 'Email') {
            AllowableCharacters = '1234567890@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_.';
        }
        if (allow == 'Description') {
            AllowableCharacters = '1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.,()/';
        }
        if (allow == 'NameCharactersAndNumbers') {
            AllowableCharacters = '1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-,/.\'';
        }
        if (allow == 'Numbers') {
            AllowableCharacters = '1234567890';
        }
        if (allow == 'Decimal') {
            AllowableCharacters = '1234567890.';
        }
        if (allow == 'Filename') {
            AllowableCharacters = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz/';
        }
        var k;
        k = document.all ? parseInt(e.keyCode) : parseInt(e.which);
        if (k != 13 && k != 8 && k != 0) {
            if ((e.ctrlKey == false) && (e.altKey == false)) {
                return (AllowableCharacters.indexOf(String.fromCharCode(k)) != -1);
            }
            else {
                return true;
            }
        }
        else {
            return true;
        }
    }

    
    function ClearField() {

        $('#txthierarchy').val('');
        $('#txtnooflevel').val('');
       

    }
    $(document).ready(function(e){
       
        

        $('#btnsubmit').click(function (e) {
            e.preventDefault(); // Prevent the default form submission

            if ($("#txthierarchy").val() == "") {
                $("#txthierarchy").focus();
                new swal(" Hierarchy Name Can't be blank.");

                return false;
            }
            if ($("#txtnooflevel").val() == "") {
                $("#txtnooflevel").focus();
                new swal("No of Level Can't be blank.");

                return false;
            }
            if (parseFloat($('#txtnooflevel').val()) == 0) {
                $("#txtnooflevel").focus();
                new swal("No of Level should be greater than 0.");

                return false;
            }
            if ($("#txtaliasname").val() == "") {
                $("#txtaliasname").focus();
                new swal(" Alias Name Can't be blank.");

                return false;
            }
            var formData = {
                ROLENAME: $('#txthierarchy').val(),
                LEVELID: $('#txtnooflevel').val(),               
                INTCREATEDBY: $('#INTCREATEDBY').val(),
            };

            Swal.fire({                
                title: 'Are you sure?',
                text: 'You want to Save',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((isConfirm) => {
                if (isConfirm.value) {
                    $.ajax({
                        type: 'POST',
                        url: '/AdminConsole/HirerachyMaster/AddHirerarchy',
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("RequestVerificationToken", $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                        data: formData,
                        success: function (response) {
                            let res = JSON.parse(response);
                            if (res.status === 'success') {
                                Swal.fire({
                                    title: '',
                                    text: "Saved Successfully",
                                    icon: 'success'
                                }).then(() => {
                                    window.location.href = '/AdminConsole/HirerachyMaster/ViewActiveHirerarchy';
                                });
                            } else if (response === 'Already Exist') {
                                Swal.fire({
                                    title: '',
                                    text: "Already Exist",
                                    icon: 'warning'
                                });
                            } else {
                                Swal.fire({
                                    title: '',
                                    text: response,
                                    icon: 'error'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: '',
                                text: 'An error occurred while processing the request.',
                                icon: 'error'
                            });
                        }
                    });
                }
            });

        });
    });
    
</script>