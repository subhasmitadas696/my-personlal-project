@model CTMS.Web.Areas.AdminConsole.Models.FunctionMaster.FunctionMasterModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "~/Areas/AdminConsole/Views/Shared/_AdminConsoleLayout.cshtml";
    ViewBag.Title = "AddFunctionMaster";

}
<div class="card card--lg main-card" id="divaddform">
    <div class="nav nav-tabs card--lg__tabs" id="nav-tab" role="tablist">
        <a class="nav-link active" id="add-hierarchy" asp-controller="FunctionMaster" asp-action="AddFunctionMaster">
            Add
        </a>
        <a class="nav-link" id="active-hierarchy" asp-controller="FunctionMaster" asp-action="ViewFunctionMasterActive">
            Active
        </a>
        <a class="nav-link" id="inactive-hierarchy" asp-controller="FunctionMaster" asp-action="ViewFunctionMasterInActive">
            InActive
        </a>
    </div>

    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)


        <div class="card-body">
            <div class="row g-4 mb-4">

                <div class="col-md-4">

                    <div class="form-floating">
                        @Html.TextBox("FunctionName", "", new { @class = "form-control", maxlength = 100, autofocus = "true", Onkeypress = "return inputLimiter(event,'NameCharactersymbol')" })
                        <label class="control-label">Function Name<span style="color:Red">*</span></label>
                        <span class="mandatory">@Html.ValidationMessageFor(model => model.FunctionName)</span>
                    </div>
                </div>

                <div class="col-md-4">

                    <div class="form-floating">
                        @Html.TextArea("FileName", "", new { @class = "form-control", maxlength = 150, Onkeypress = "return inputLimiter(event,'Filename')" })
                        <label class="control-label">File Name<span style="color:Red">*</span></label>
                        <span class="mandatory">@Html.ValidationMessageFor(model => model.FileName)</span>
                    </div>
                </div>

                <div class="col-md-4">

                    <div class="form-floating">
                        @Html.TextArea("Description", "", new { @class = "form-control", maxlength = 98, Onkeypress = "return inputLimiter(event,'Description')" })
                        <label class="control-label">Description<span style="color:Red">*</span></label>
                        <span class="mandatory">@Html.ValidationMessageFor(model => model.Description)</span>
                    </div>
                    <span class="mandatory" id="SpanLbl1">Maximum <span class="mandatory" id="SpanLbl">100 </span> Character Allowed</span>
                </div>

                <div class="col-md-4">
                    <label class="d-block">Permission<span style="color:Red">*</span></label>
                    <div class="form-check form-check-inline">
                        <input type="checkbox" name="CheckBoxAdd" id="Add" class="form-check-input" value="Y">
                        <label class="custom-control-label" for="Add">Add</label>
                    </div>&nbsp;
                    <div class="form-check form-check-inline">
                        <input type="checkbox" id="View" name="CheckBoxView" class="form-check-input" value="Y" />
                        <label class="custom-control-label" for="View">View</label>
                    </div>&nbsp;
                    <div class="form-check form-check-inline">
                        <input type="checkbox" id="Manage" name="CheckBoxManage" class="form-check-input" value="Y" />
                        <label class="custom-control-label" for="Manage">Manage</label>
                    </div>
                </div>
            </div>


            <div class="mt-4">

                <button type="submit" name="submit" id="btn1" class="btn btn-primary rounded-pill btn-lg" title="Submit" value="Submit">Submit</button>

                <input type="button" class="btn btn-secondary rounded-pill btn-lg" onclick="return ClearField();" value="Reset" />
                    
               

            </div>
        </div>
    }

</div>
@{
    if (ViewData["result"] != null)
    {
        if ((ViewData["result"].ToString()) == "1")
        {
            <script type="text/javascript" language="javascript">
                new swal("Function created Successfully !");
            </script>
        }
        else if ((ViewData["result"].ToString()) == "4")
        {
            <script type="text/javascript" language="javascript">
                new swal("function Already Exist !");
            </script>
        }
        else
        {
            <script type="text/javascript" language="javascript">
                new swal('@ViewData["result"]');
            </script>
        }
        ViewData["result"] = null;
    }
}
@{
    if (!string.IsNullOrEmpty(ViewData["log"] as string))
    {
        @*@Html.Raw(ViewData["log"]).ToHtmlString();*@
    }
}

@section Scripts {

    <script type="text/javascript" src="@Url.Content("~/admjs/validator.js")"></script>

    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            $('#rbNo').prop("checked", true);
            $('#Yes').prop("checked", true);
            $('#SpanLbl1').hide();
            window.history.forward();  //Disable back button after logout
            $('#Description').keyup(function () {
                $('#SpanLbl1').show();
                var left = 500 - $(this).val().length;
                if (left < 0) {
                    left = 0;
                }
                $('#SpanLbl').text(left);
            });

        });
    </script>

    <script type="text/javascript">
        function inputLimiter(e, allow) {
            var AllowableCharacters = '';

            if (allow == 'NameCharactersymbol') {
                AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz./&';
            }
            if (allow == 'NameCharacters') {
                AllowableCharacters = ' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.\'';
            }
            if (allow == 'Email') {
                AllowableCharacters = '1234567890@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_.';
            }
            if (allow == 'Description') {
                AllowableCharacters = '1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-.,()/';
            }
            if (allow == 'NameCharactersAndNumbers') {
                AllowableCharacters = '1234567890 ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-,/.\'';
            }
            if (allow == 'Numbers') {
                AllowableCharacters = '1234567890';
            }
            if (allow == 'Decimal') {
                AllowableCharacters = '1234567890.';
            }
            if (allow == 'Filename') {
                AllowableCharacters = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz/';
            }
            var k;
            k = document.all ? parseInt(e.keyCode) : parseInt(e.which);
            if (k != 13 && k != 8 && k != 0) {
                if ((e.ctrlKey == false) && (e.altKey == false)) {
                    return (AllowableCharacters.indexOf(String.fromCharCode(k)) != -1);
                }
                else {
                    return true;
                }
            }
            else {
                return true;
            }
        }

        function checkUrl(url) {
            //regular expression for URL
            var pattern = /^(http|https)?:\/\/[a-zA-Z0-9-\.]+\.[a-z]{2,4}/;

            if (pattern.test(url)) {
                return true;
            } else {
                return false;
            }
        }
    </script>
<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">
    $(document).ready(function () {
        $("#btn1").click(function (e) {
            e.preventDefault(); // Prevent the default form submission

            // Function to show a sweet alert message
            function showAlert(message) {
                Swal.fire({
                    title: "",
                    text: message,
                    icon: "error"
                }).then(() => {
                    return false;
                });
            }

            // Check if required fields are empty
            if ($("#FunctionName").val() === "") {
                $("#FunctionName").focus();
                showAlert("Function Name Can't be blank.");
                return false;
            }
            if ($("#FileName").val() === "") {
                $("#FileName").focus();
                showAlert("FileName Can't be blank.");
                return false;
            }
            if ($('#Description').val() === "") {
                $("#Description").focus();
                showAlert("Description Name Can't be blank.");
                return false;
            }

            // Check if at least one permission is selected
            if (!$("#Add").is(":checked") && !$("#View").is(":checked") && !$("#Manage").is(":checked")) {
                $("#Add").focus();
                showAlert("Please choose Permission");
                return false;
            }

            // Get the form data
            var formData = {
                FunctionName: $("#FunctionName").val(),
                FileName: $("#FileName").val(),
                Description: $("#Description").val(),
                FAdd: $("#Add").is(":checked") ? "Y" : "N",
                FView: $("#View").is(":checked") ? "Y" : "N",
                FManage: $("#Manage").is(":checked") ? "Y" : "N",
                MailR: $("#rbYes").is(":checked") ? "1" : "0",
                FreeBees: $("#Yes").is(":checked") ? "1" : "2",
                PortletFile: $("#PortletName").val()
            };

            // Show confirmation dialog
            Swal.fire({
                title: "",
                text: "Are you sure you want to Create this?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                closeOnConfirm: false
            }).then((result) => {
                if (result.isConfirmed) {
                    // Make the Ajax POST request
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("AddFunctionMaster", "FunctionMaster")',
                        data: formData,
                        success: function (response) {
                            if (response === '1') {
                                Swal.fire({
                                    title: "",
                                    text: 'Saved Successfully',
                                    icon: "success"
                                }).then(() => {
                                    window.location.href = '@Url.Action("ViewFunctionMasterActive", "FunctionMaster")';
                                });
                            } else {
                                showAlert(response);
                            }
                        },
                        error: function (error) {
                            showAlert(error);
                            window.location.href = '@Url.Action("AddFunctionMaster", "FunctionMaster")';
                        }
                    });
                }
            });
        });
    });
    function ClearField() {
        $('#FunctionName').val('');
        $('#FileName').val('');
        $('#Description').val('');

        // Uncheck checkboxes if any of them are checked
        if ($('#Add').is(':checked')) {
            $('#Add').prop('checked', false);
        }
        if ($('#View').is(':checked')) {
            $('#View').prop('checked', false);
        }
        if ($('#Manage').is(':checked')) {
            $('#Manage').prop('checked', false);
        }

        var left = 500;
        if (left < 0) {
            left = 0;
        }
        $('#SpanLbl').text(left);
        $('#SpanLbl1').hide();
    }

</script>


}
