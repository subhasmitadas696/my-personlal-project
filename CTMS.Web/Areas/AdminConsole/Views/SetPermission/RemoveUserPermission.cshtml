@model CTMS.Web.Areas.AdminConsole.Models.SetPermission.SetPermissionModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "~/Areas/AdminConsole/Views/Shared/_AdminConsoleLayout.cshtml";
    ViewData["Title"] = "Remove User Permission";

}

@section Scripts{



}
@{
    if (TempData["CommandStatus"] != null)
    {
        <script type="text/javascript">
            new swal('@(TempData["CommandStatus"])');
        </script>
    }

}

<div class="card card--lg">


    <div class="card-body">
        @if (Model.UserList.Count > 0)
        {
            <form id="frmMarkInactive" data-parsley-validate novalidate method="post" asp-action="MarkAsInActive"
                  asp-controller="SetPermission" asp-area="AdminConsole" asp-antiforgery="true" onsubmit="return validateForm()">
                <div class="table-responsive--rounded table-responsive--datatable">
                    <div class="table-responsive">


                        <table class="table" id="example1">

                            <thead>
                                <tr>
                                    <th width="10px"><input type="checkbox" id="checkBoxAll" onclick="check_uncheck_checkbox(this.checked)" /></th>
                                    <th width="1px">
                                        SL#
                                    </th>
                                    <th width="100px">User Name</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var userlist in Model.UserList.Select((x, i) => new { Data = x, Index = i + 1 }))
                                {
                                    <tr>
                                        <td>
                                            <input class="cboxDELclass form-check-input" id="chkbox" type="checkbox" name="chkbox" value="@userlist.Data.UserID" />
                                        </td>
                                        <td>@userlist.Index</td>
                                        <td>@Html.DisplayFor(modelItem => userlist.Data.UserName)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <button type="submit" id="submitButton" name="submitButton" class="btn btn-primary btn-sm" title="Mark AS Inactive" value="submit">Remove All Permission</button>
                    </div>
                </div>
            </form>
        }
        else
        {
            <h4>Record Not Found</h4>
        }

    </div>
</div>

<script type="text/javascript" nonce="uG2bsk6JIH923nsvp01n24KE">
    function chkClearField() {
        $('input[type=checkbox]').prop('checked', false);
    }
    $('#submitButton').click(function (e) {
        e.preventDefault(); // Prevent the default form submission
        if ($('#example1 :checked').length == 0) {
            new swal("No record selected for Inactive!");
            return false;
        }
        var chkbox = [];
        $('input[name=chkbox]:checked').map(function () {
            chkbox.push($(this).val());
        });
        Swal.fire({
            title: "Are you sure?",
            text: "You want to Mark As In-Active",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes",
            closeOnConfirm: false
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: 'POST',
                    url: '/AdminConsole/SetPermission/MarkAsInActive',
                    data: { chkbox: chkbox },
                    success: function (response) {
                        console.log(response);
                        if (response === "Remove all permissions form selected user successfully") {
                            Swal.fire({
                                title: "",
                                text: response,
                                icon: "success"
                            }).then(() => {
                                window.location.href = "/AdminConsole/SetPermission/RemoveUserPermission";
                            });
                        } else if (response === "Already Exist") {
                            Swal.fire({
                                title: "",
                                text: response,
                                icon: "warning"
                            }).then(() => {
                                return;
                            });
                        } else {
                            Swal.fire({
                                title: "",
                                text: response,
                                icon: "error"
                            }).then(() => {
                                return;
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: "",
                            text: 'An error occurred while processing the request.',
                            icon: "error"
                        }).then(() => {
                            return;
                        });
                    }
                });
            }
        });
    });
    function check_uncheck_checkbox(isChecked) {
        if (isChecked) {
            $('input[name="chkbox"]').each(function () {
                this.checked = true;
            });
        }
        else {
            $('input[name="chkbox"]').each(function () {
                this.checked = false;
            });
        }
    }
</script>